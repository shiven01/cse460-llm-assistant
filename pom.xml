<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Spring Boot Parent - Controls core dependency versions -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<!-- Project Information -->
	<groupId>com.cse460</groupId>
	<artifactId>llm-assistant</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>llm-assistant</name>
	<description>CSE460 LLM Assistant for PDF documents</description>

	<!-- Centralized Version Properties -->
	<properties>
		<!-- Core -->
		<java.version>17</java.version>

		<langchain4j.version>0.28.0</langchain4j.version>
		<langchain4j.easy-rag.version>1.0.0-beta3</langchain4j.easy-rag.version>

		<elasticsearch.version>8.12.1</elasticsearch.version>

		<!-- Security -->
		<jwt.version>0.11.5</jwt.version>

		<!-- PDF Processing -->
		<pdfbox.version>3.0.3</pdfbox.version>

		<!-- Testing -->
		<junit.version>5.10.2</junit.version>
		<mockito.version>5.10.0</mockito.version>

		<!-- Utilities -->
		<guava.version>32.1.3-jre</guava.version>
	</properties>

	<!-- Dependency Management - Controls versions of dependencies not directly managed by Spring Boot -->
	<dependencyManagement>
		<dependencies>
			<!-- Testing BOM -->
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- ===================== -->
		<!-- SPRING BOOT CORE     -->
		<!-- ===================== -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- Web server and MVC support -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
			<!-- Input validation support -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
			<!-- Development-time utilities -->
		</dependency>

		<!-- ===================== -->
		<!-- DATABASE              -->
		<!-- ===================== -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<!-- ORM and database operation support -->
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
			<!-- Production database driver -->
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
			<!-- In-memory test database -->
		</dependency>

		<!-- ===================== -->
		<!-- ELASTICSEARCH         -->
		<!-- ===================== -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
		</dependency>
		<dependency>
			<groupId>co.elastic.clients</groupId>
			<artifactId>elasticsearch-java</artifactId>
			<version>${elasticsearch.version}</version>
			<!-- Direct client for advanced vector search operations -->
		</dependency>

		<!-- ===================== -->
		<!-- LangChain4j - AI/LLM  -->
		<!-- ===================== -->
		<!-- Core dependency - base abstractions -->
		<dependency>
			<groupId>dev.langchain4j</groupId>
			<artifactId>langchain4j</artifactId>
			<version>${langchain4j.version}</version>
		</dependency>

		<!-- Embedding model - local embedding generation -->
		<dependency>
			<groupId>dev.langchain4j</groupId>
			<artifactId>langchain4j-embeddings-all-minilm-l6-v2</artifactId>
			<version>${langchain4j.version}</version>
		</dependency>

		<!-- Easy RAG - Simplified RAG workflow -->
		<dependency>
			<groupId>dev.langchain4j</groupId>
			<artifactId>langchain4j-easy-rag</artifactId>
			<version>${langchain4j.easy-rag.version}</version>
		</dependency>

		<!-- OpenAI Integration - LLM provider -->
		<dependency>
			<groupId>dev.langchain4j</groupId>
			<artifactId>langchain4j-open-ai</artifactId>
			<version>${langchain4j.version}</version>
		</dependency>

		<!-- ===================== -->
		<!-- PDF PROCESSING        -->
		<!-- ===================== -->
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>${pdfbox.version}</version>
			<!-- Core PDF parsing functionality -->
		</dependency>
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox-tools</artifactId>
			<version>${pdfbox.version}</version>
			<!-- Additional PDF utilities -->
		</dependency>

		<!-- ===================== -->
		<!-- SECURITY              -->
		<!-- ===================== -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<!-- Web security and authentication framework -->
		</dependency>

		<!-- JWT Authentication -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>${jwt.version}</version>
			<!-- JWT API interfaces -->
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>${jwt.version}</version>
			<scope>runtime</scope>
			<!-- JWT implementation - only needed at runtime -->
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>${jwt.version}</version>
			<scope>runtime</scope>
			<!-- JWT Jackson serialization support -->
		</dependency>

		<!-- ===================== -->
		<!-- UTILITIES             -->
		<!-- ===================== -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
			<!-- Annotation-based code generation - compile-time only -->
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<!-- JSON serialization/deserialization -->
			<!-- Version managed by Spring Boot -->
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
			<!-- Google's core Java libraries -->
			<!-- Used for various utilities including reCAPTCHA validation -->
		</dependency>

		<!-- ===================== -->
		<!-- TESTING               -->
		<!-- ===================== -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<!-- Exclude JUnit 4 to avoid conflicts -->
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
			<!-- Security testing utilities -->
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
			<!-- JUnit 5 testing framework -->
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
			<!-- Mocking framework -->
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
			<!-- Mockito-JUnit integration -->
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Compiler configuration for annotation processing -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<!-- Spring Boot Maven plugin for executable JAR creation -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.cse460.llm_assistant.LlmAssistantApplication</mainClass>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>